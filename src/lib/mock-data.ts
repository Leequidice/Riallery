import { Artwork, Artist, Medium, Style, Theme, Event, WeeklyFeature, User } from '@/types';

// Mock themes
export const mockThemes: Theme[] = [
  { _id: '1', name: 'Abstract', slug: 'abstract', isSuggested: true },
  { _id: '2', name: 'Portrait', slug: 'portrait', isSuggested: true },
  { _id: '3', name: 'Landscape', slug: 'landscape', isSuggested: true },
  { _id: '4', name: 'Digital', slug: 'digital', isSuggested: true },
  { _id: '5', name: 'Contemporary', slug: 'contemporary', isSuggested: true },
  { _id: '6', name: 'Humor', slug: 'humor', isSuggested: true },
];

// Mock mediums
export const mockMediums: Medium[] = [
  { _id: '1', name: 'Digital Art', slug: 'digital-art' },
  { _id: '2', name: 'Oil Paint', slug: 'oil-paint' },
  { _id: '3', name: 'Acrylic Paint', slug: 'acrylic-paint' },
  { _id: '4', name: 'Watercolor', slug: 'watercolor' },
  { _id: '5', name: 'Mixed Media', slug: 'mixed-media' },
];

// Mock styles
export const mockStyles: Style[] = [
  { _id: '1', name: 'Realistic', slug: 'realistic' },
  { _id: '2', name: 'Impressionist', slug: 'impressionist' },
  { _id: '3', name: 'Surreal', slug: 'surreal' },
  { _id: '4', name: 'Minimalist', slug: 'minimalist' },
  { _id: '5', name: 'Pop Art', slug: 'pop-art' },
  { _id: '6', name: 'Meme', slug: 'meme' },
];

// Mock events
export const mockEvents: Event[] = [
  {
    _id: '1',
    name: 'Spring Art Festival',
    slug: 'spring-art-festival',
    description: 'Annual celebration of emerging artists and their latest works',
    startDate: '2024-03-01',
    endDate: '2024-03-31',
    isActive: true,
  },
  {
    _id: '2',
    name: 'Digital Dreams Challenge',
    slug: 'digital-dreams-challenge',
    description: 'Monthly challenge for digital artists to showcase their creativity',
    startDate: '2024-02-01',
    endDate: '2024-02-29',
    isActive: false,
  },
  {
    _id: '3',
    name: 'Summer Showcase',
    slug: 'summer-showcase',
    description: 'Community showcase featuring the best summer-themed artworks',
    startDate: '2024-06-01',
    endDate: '2024-08-31',
    isActive: true,
  },
];

// Helper function to create artist based on filename
function getArtistByFilename(filename: string): Artist {
  const nameWithoutExt = filename.replace(/\.[^/.]+$/, '');
  const artistName = nameWithoutExt.replace(/[_-]/g, ' ');
  
  return {
    _id: `artist-${nameWithoutExt}`,
    name: artistName,
    slug: nameWithoutExt.toLowerCase(),
    bio: `Creative artist specializing in digital art and visual storytelling.`,
    status: 'active',
    createdAt: '2025-01-20',
    updatedAt: '2025-01-28',
  };
}

// Mock artists (main gallery artists)
export const mockArtists: Artist[] = [
  {
    _id: '1',
    name: 'Ahamedzola',
    slug: 'ahamedzola',
    bio: 'Contemporary digital artist known for thought-provoking visual narratives.',
    status: 'featured',
    createdAt: '2025-01-20',
    updatedAt: '2025-01-28',
  },
  {
    _id: '2', 
    name: 'Diokusumo',
    slug: 'diokusumo',
    bio: 'Digital artist creating vibrant and expressive contemporary works.',
    status: 'featured',
    createdAt: '2025-01-20',
    updatedAt: '2025-01-28',
  },
  {
    _id: '3',
    name: 'Nagasaikurma',
    slug: 'nagasaikurma',
    bio: 'Visual storyteller combining traditional themes with modern digital techniques.',
    status: 'featured',
    createdAt: '2025-01-20',
    updatedAt: '2025-01-28',
  },
  {
    _id: '4',
    name: 'Fartxe',
    slug: 'fartxe',
    bio: 'Innovative animator creating engaging visual experiences.',
    status: 'featured',
    createdAt: '2025-01-20',
    updatedAt: '2025-01-28',
  },
  {
    _id: '5',
    name: 'dt-dude',
    slug: 'dt-dude',
    bio: 'Tech-inspired artist creating content that bridges technology and creativity.',
    status: 'featured',
    createdAt: '2025-01-20',
    updatedAt: '2025-01-28',
  },
  {
    _id: '6',
    name: 'Siiiuuper',
    slug: 'siiiuuper',
    bio: 'Dynamic artist known for energetic and vibrant creative expressions.',
    status: 'featured',
    createdAt: '2025-01-20',
    updatedAt: '2025-01-28',
  },
  {
    _id: '7',
    name: 'Sukafunk',
    slug: 'sukafunk',
    bio: 'Multi-media artist exploring the intersection of music and visual art.',
    status: 'featured',
    createdAt: '2025-01-20',
    updatedAt: '2025-01-28',
  },
  {
    _id: '8',
    name: 'NVRL',
    slug: 'nvrl',
    bio: 'Contemporary artist pushing boundaries with innovative digital techniques.',
    status: 'featured',
    createdAt: '2025-01-20',
    updatedAt: '2025-01-28',
  },
  {
    _id: '9',
    name: 'Neulpum',
    slug: 'neulpum',
    bio: 'Minimalist artist creating clean and impactful visual compositions.',
    status: 'featured',
    createdAt: '2025-01-20',
    updatedAt: '2025-01-28',
  },
];

// Mock artworks (main gallery - original content only)
export const mockArtworks: Artwork[] = [
  {
    _id: 'art1',
    title: 'Digital Serenity',
    slug: 'digital-serenity',
    description: 'By arishdona',
    imageUrl: '/Artists/Arts/arishdona.webp',
    artist: getArtistByFilename('arishdona.webp'),
    medium: mockMediums[0],
    style: mockStyles[0],
    themes: [mockThemes[0], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-03-15',
    publicationDate: '2025-03-18',
    isFeatured: true,
    createdAt: '2025-03-15',
    updatedAt: '2025-03-18',
  },
  {
    _id: 'art2',
    title: 'Contemporary Expression',
    slug: 'contemporary-expression',
    description: 'By itsmeyourvicky',
    imageUrl: '/Artists/Arts/itsmeyourvicky.webp',
    artist: getArtistByFilename('itsmeyourvicky.webp'),
    medium: mockMediums[0],
    style: mockStyles[4],
    themes: [mockThemes[1], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-03-14',
    publicationDate: '2025-03-17',
    isFeatured: false,
    createdAt: '2025-03-14',
    updatedAt: '2025-03-17',
  },
  {
    _id: 'art3',
    title: 'Vadim\'s Vision',
    slug: 'vadims-vision',
    description: 'By vadim064',
    imageUrl: '/Artists/Arts/vadim064.webp',
    artist: getArtistByFilename('vadim064.webp'),
    medium: mockMediums[0],
    style: mockStyles[1],
    themes: [mockThemes[2], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-03-13',
    publicationDate: '2025-03-16',
    isFeatured: false,
    createdAt: '2025-03-13',
    updatedAt: '2025-03-16',
  },
  {
    _id: 'art4',
    title: 'Animated Artistry',
    slug: 'animated-artistry',
    description: 'By 0xYANDY',
    imageUrl: '/Artists/Arts/0xYANDY.mp4',
    artist: getArtistByFilename('0xYANDY.mp4'),
    medium: mockMediums[0],
    style: mockStyles[3],
    themes: [mockThemes[3], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-03-12',
    publicationDate: '2025-03-15',
    isFeatured: true,
    createdAt: '2025-03-12',
    updatedAt: '2025-03-15',
  },
  {
    _id: 'art5',
    title: 'Dynamic Movement',
    slug: 'dynamic-movement',
    description: 'By Alexeyya',
    imageUrl: '/Artists/Arts/Alexeyya.mp4',
    artist: getArtistByFilename('Alexeyya.mp4'),
    medium: mockMediums[0],
    style: mockStyles[2],
    themes: [mockThemes[3], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-03-11',
    publicationDate: '2025-03-14',
    isFeatured: false,
    createdAt: '2025-03-11',
    updatedAt: '2025-03-14',
  },
  {
    _id: 'art6',
    title: 'Phuong Expression',
    slug: 'phuong-expression',
    description: 'By Phuong',
    imageUrl: '/Artists/Arts/Phuong.webp',
    artist: getArtistByFilename('Phuong.webp'),
    medium: mockMediums[0],
    style: mockStyles[4],
    themes: [mockThemes[0], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-03-10',
    publicationDate: '2025-03-13',
    isFeatured: false,
    createdAt: '2025-03-10',
    updatedAt: '2025-03-13',
  },
  {
    _id: 'art7',
    title: 'Raw Rage',
    slug: 'raw-rage',
    description: 'By rawrage',
    imageUrl: '/Artists/Arts/rawrage.mp4',
    artist: getArtistByFilename('rawrage.mp4'),
    medium: mockMediums[0],
    style: mockStyles[4],
    themes: [mockThemes[3], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-03-09',
    publicationDate: '2025-03-12',
    isFeatured: false,
    createdAt: '2025-03-09',
    updatedAt: '2025-03-12',
  },
  {
    _id: 'art8',
    title: 'Kharather Vision',
    slug: 'kharather-vision',
    description: 'By Kharather',
    imageUrl: '/Artists/Arts/Kharather.mp4',
    artist: getArtistByFilename('Kharather.mp4'),
    medium: mockMediums[0],
    style: mockStyles[2],
    themes: [mockThemes[3], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-03-08',
    publicationDate: '2025-03-11',
    isFeatured: false,
    createdAt: '2025-03-08',
    updatedAt: '2025-03-11',
  },
  {
    _id: 'art9',
    title: 'Phuong\'s Elegance',
    slug: 'phuongs-elegance',
    description: 'By phuong',
    imageUrl: '/Artists/Arts/phuong.mp4',
    artist: getArtistByFilename('phuong.mp4'),
    medium: mockMediums[0],
    style: mockStyles[3],
    themes: [mockThemes[0], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-03-07',
    publicationDate: '2025-03-10',
    isFeatured: false,
    createdAt: '2025-03-07',
    updatedAt: '2025-03-10',
  },
  // Weekly Featured Artworks (with flag for preservation when features rotate)
  {
    _id: 'weekly-art1',
    title: 'Ceqih\'s Creative Vision',
    slug: 'weekly-creative-vision-ceqih',
    description: 'By ceqih',
    imageUrl: '/Artists/Weekly Features/Arts/ceqih.jpg',
    artist: getArtistByFilename('ceqih'),
    medium: mockMediums[1],
    style: mockStyles[0],
    themes: [mockThemes[0], mockThemes[2]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-art2',
    title: 'Ciao\'s Digital Masterpiece',
    slug: 'weekly-digital-masterpiece-ciao0910',
    description: 'By ciao0910',
    imageUrl: '/Artists/Weekly Features/Arts/ciao0910.webp',
    artist: getArtistByFilename('ciao0910'),
    medium: mockMediums[0],
    style: mockStyles[1],
    themes: [mockThemes[1], mockThemes[3]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-art3',
    title: 'HeavenKiley\'s Artistic Vision',
    slug: 'weekly-artistic-vision-heavenkiley',
    description: 'By heavenkiley',
    imageUrl: '/Artists/Weekly Features/Arts/heavenkiley.jpeg',
    artist: getArtistByFilename('heavenkiley'),
    medium: mockMediums[2],
    style: mockStyles[2],
    themes: [mockThemes[0], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-art4',
    title: 'Darkthgink\'s Dark Vision',
    slug: 'weekly-dark-vision-darkthgink',
    description: 'By darkthgink',
    imageUrl: '/Artists/Weekly Features/Arts/darkthgink.webp',
    artist: getArtistByFilename('darkthgink'),
    medium: mockMediums[0],
    style: mockStyles[2],
    themes: [mockThemes[0], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-art5',
    title: 'Dldw1314\'s Creative Expression',
    slug: 'weekly-creative-expression-dldw1314',
    description: 'By dldw1314',
    imageUrl: '/Artists/Weekly Features/Arts/dldw1314.webp',
    artist: getArtistByFilename('dldw1314'),
    medium: mockMediums[0],
    style: mockStyles[1],
    themes: [mockThemes[1], mockThemes[3]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-art6',
    title: 'Hrx0005\'s Artistic Journey',
    slug: 'weekly-artistic-journey-hrx0005',
    description: 'By hrx0005',
    imageUrl: '/Artists/Weekly Features/Arts/hrx0005.webp',
    artist: getArtistByFilename('hrx0005'),
    medium: mockMediums[2],
    style: mockStyles[2],
    themes: [mockThemes[2], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-art7',
    title: 'Jdr525\'s Digital Art',
    slug: 'weekly-digital-art-jdr525',
    description: 'By jdr525',
    imageUrl: '/Artists/Weekly Features/Arts/jdr525.webp',
    artist: getArtistByFilename('jdr525'),
    medium: mockMediums[0],
    style: mockStyles[1],
    themes: [mockThemes[0], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-art8',
    title: 'Lueguo\'s Video Creation',
    slug: 'weekly-video-creation-lueguo',
    description: 'By lueguo',
    imageUrl: '/Artists/Weekly Features/Arts/lueguo.mp4',
    artist: getArtistByFilename('lueguo'),
    medium: mockMediums[0],
    style: mockStyles[3],
    themes: [mockThemes[3], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-art9',
    title: 'Lueguo\'s Static Art',
    slug: 'weekly-static-art-lueguo',
    description: 'By lueguo',
    imageUrl: '/Artists/Weekly Features/Arts/lueguo.webp',
    artist: getArtistByFilename('lueguo'),
    medium: mockMediums[0],
    style: mockStyles[1],
    themes: [mockThemes[1], mockThemes[2]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-art10',
    title: 'May821\'s Video Art',
    slug: 'weekly-video-art-may821',
    description: 'By may821',
    imageUrl: '/Artists/Weekly Features/Arts/may821.mp4',
    artist: getArtistByFilename('may821'),
    medium: mockMediums[0],
    style: mockStyles[3],
    themes: [mockThemes[3], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-art11',
    title: 'Novanguyen2802\'s Masterpiece',
    slug: 'weekly-masterpiece-novanguyen2802',
    description: 'By novanguyen2802',
    imageUrl: '/Artists/Weekly Features/Arts/novanguyen2802.webp',
    artist: getArtistByFilename('novanguyen2802'),
    medium: mockMediums[2],
    style: mockStyles[2],
    themes: [mockThemes[0], mockThemes[3]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-art12',
    title: 'Tinkyviki\'s Creative Vision',
    slug: 'weekly-creative-vision-tinkyviki',
    description: 'By tinkyviki',
    imageUrl: '/Artists/Weekly Features/Arts/tinkyviki.webp',
    artist: getArtistByFilename('tinkyviki'),
    medium: mockMediums[1],
    style: mockStyles[0],
    themes: [mockThemes[2], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
];

// Mock memes (main gallery - original content only)
export const mockMemes: Artwork[] = [
  {
    _id: 'meme1',
    title: 'Ahmed\'s Art Wisdom',
    slug: 'ahmeds-art-wisdom',
    description: 'By Ahamedzola',
    imageUrl: '/Artists/Memes/Ahamedzola.webp',
    artist: getArtistByFilename('Ahamedzola.webp'),
    medium: mockMediums[0],
    style: mockStyles[5],
    themes: [mockThemes[3], mockThemes[5]],
    yearCreated: 2025,
    contentType: 'meme',
    status: 'approved',
    submissionDate: '2025-03-28',
    publicationDate: '2025-03-29',
    isFeatured: false,
    createdAt: '2025-03-28',
    updatedAt: '2025-03-29',
  },
  {
    _id: 'meme2',
    title: 'Dio\'s Digital Dilemma',
    slug: 'dios-digital-dilemma',
    description: 'By Diokusumo',
    imageUrl: '/Artists/Memes/Diokusumo.webp',
    artist: getArtistByFilename('Diokusumo.webp'),
    medium: mockMediums[0],
    style: mockStyles[5],
    themes: [mockThemes[3], mockThemes[5]],
    yearCreated: 2025,
    contentType: 'meme',
    status: 'approved',
    submissionDate: '2025-03-27',
    publicationDate: '2025-03-28',
    isFeatured: true,
    createdAt: '2025-03-27',
    updatedAt: '2025-03-28',
  },
  {
    _id: 'meme3',
    title: 'Sai\'s Creative Commentary',
    slug: 'sais-creative-commentary',
    description: 'By Nagasaikurma',
    imageUrl: '/Artists/Memes/Nagasaikurma.webp',
    artist: getArtistByFilename('Nagasaikurma.webp'),
    medium: mockMediums[0],
    style: mockStyles[5],
    themes: [mockThemes[2], mockThemes[5]],
    yearCreated: 2025,
    contentType: 'meme',
    status: 'approved',
    submissionDate: '2025-03-26',
    publicationDate: '2025-03-27',
    isFeatured: false,
    createdAt: '2025-03-26',
    updatedAt: '2025-03-27',
  },
  {
    _id: 'meme4',
    title: 'Fartxe\'s Animated Antics',
    slug: 'fartxes-animated-antics',
    description: 'By Fartxe',
    imageUrl: '/Artists/Memes/Fartxe.gif',
    artist: getArtistByFilename('Fartxe.gif'),
    medium: mockMediums[0],
    style: mockStyles[5],
    themes: [mockThemes[3], mockThemes[5]],
    yearCreated: 2025,
    contentType: 'meme',
    status: 'approved',
    submissionDate: '2025-03-25',
    publicationDate: '2025-03-26',
    isFeatured: false,
    createdAt: '2025-03-25',
    updatedAt: '2025-03-26',
  },
  {
    _id: 'meme5',
    title: 'DT Dude\'s Developer Drama',
    slug: 'dt-dudes-developer-drama',
    description: 'By dt-dude',
    imageUrl: '/Artists/Memes/dt-dude.mp4',
    artist: getArtistByFilename('dt-dude.mp4'),
    medium: mockMediums[0],
    style: mockStyles[5],
    themes: [mockThemes[3], mockThemes[5]],
    yearCreated: 2025,
    contentType: 'meme',
    status: 'approved',
    submissionDate: '2025-03-24',
    publicationDate: '2025-03-25',
    isFeatured: false,
    createdAt: '2025-03-24',
    updatedAt: '2025-03-25',
  },
  {
    _id: 'meme6',
    title: 'Kato\'s Creative Comedy',
    slug: 'katos-creative-comedy',
    description: 'By Katohife',
    imageUrl: '/Artists/Memes/Katohife.mp4',
    artist: getArtistByFilename('Katohife.mp4'),
    medium: mockMediums[0],
    style: mockStyles[5],
    themes: [mockThemes[3], mockThemes[5]],
    yearCreated: 2025,
    contentType: 'meme',
    status: 'approved',
    submissionDate: '2025-03-23',
    publicationDate: '2025-03-24',
    isFeatured: false,
    createdAt: '2025-03-23',
    updatedAt: '2025-03-24',
  },
  {
    _id: 'meme7',
    title: 'Richard\'s Remarkable Reel',
    slug: 'richards-remarkable-reel',
    description: 'By Richard12',
    imageUrl: '/Artists/Memes/Richard12.mp4',
    artist: getArtistByFilename('Richard12.mp4'),
    medium: mockMediums[0],
    style: mockStyles[5],
    themes: [mockThemes[3], mockThemes[5]],
    yearCreated: 2025,
    contentType: 'meme',
    status: 'approved',
    submissionDate: '2025-03-22',
    publicationDate: '2025-03-23',
    isFeatured: false,
    createdAt: '2025-03-22',
    updatedAt: '2025-03-23',
  },
  // Weekly Featured Memes (with flag for preservation when features rotate)
  {
    _id: 'weekly-meme1',
    title: 'Cesar\'s Hilarious Creation',
    slug: 'weekly-hilarious-creation-cesar',
    description: 'By cesar',
    imageUrl: '/Artists/Weekly Features/Memes/cesar.jpg',
    artist: getArtistByFilename('cesar'),
    medium: mockMediums[0],
    style: mockStyles[1],
    themes: [mockThemes[0], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'meme',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-meme2',
    title: 'Hbhb\'s Meme Magic',
    slug: 'weekly-meme-magic-hbhb',
    description: 'By hbhb',
    imageUrl: '/Artists/Weekly Features/Memes/hbhb.jpg',
    artist: getArtistByFilename('hbhb'),
    medium: mockMediums[1],
    style: mockStyles[2],
    themes: [mockThemes[1], mockThemes[3]],
    yearCreated: 2025,
    contentType: 'meme',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-meme3',
    title: 'Daniviecmi\'s Hilarious Take',
    slug: 'weekly-hilarious-take-daniviecmi',
    description: 'By daniviecmi',
    imageUrl: '/Artists/Weekly Features/Memes/daniviecmi.webp',
    artist: getArtistByFilename('daniviecmi'),
    medium: mockMediums[0],
    style: mockStyles[5],
    themes: [mockThemes[5], mockThemes[3]],
    yearCreated: 2025,
    contentType: 'meme',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-meme4',
    title: 'Dorock34\'s Video Meme',
    slug: 'weekly-video-meme-dorock34',
    description: 'By dorock34',
    imageUrl: '/Artists/Weekly Features/Memes/dorock34.mp4',
    artist: getArtistByFilename('dorock34'),
    medium: mockMediums[0],
    style: mockStyles[5],
    themes: [mockThemes[5], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'meme',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-meme5',
    title: 'Hyuga37512\'s Comedy Gold',
    slug: 'weekly-comedy-gold-hyuga37512',
    description: 'By hyuga37512',
    imageUrl: '/Artists/Weekly Features/Memes/hyuga37512.webp',
    artist: getArtistByFilename('hyuga37512'),
    medium: mockMediums[0],
    style: mockStyles[5],
    themes: [mockThemes[5], mockThemes[2]],
    yearCreated: 2025,
    contentType: 'meme',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-meme6',
    title: 'Karandedhaa\'s Funny Creation',
    slug: 'weekly-funny-creation-karandedhaa',
    description: 'By karandedhaa',
    imageUrl: '/Artists/Weekly Features/Memes/karandedhaa.webp',
    artist: getArtistByFilename('karandedhaa'),
    medium: mockMediums[0],
    style: mockStyles[5],
    themes: [mockThemes[5], mockThemes[1]],
    yearCreated: 2025,
    contentType: 'meme',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-meme7',
    title: 'Mofeoluwa2\'s Meme Magic',
    slug: 'weekly-meme-magic-mofeoluwa2',
    description: 'By mofeoluwa2',
    imageUrl: '/Artists/Weekly Features/Memes/mofeoluwa2.webp',
    artist: getArtistByFilename('mofeoluwa2'),
    medium: mockMediums[0],
    style: mockStyles[5],
    themes: [mockThemes[5], mockThemes[0]],
    yearCreated: 2025,
    contentType: 'meme',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-meme8',
    title: 'Nafisnin\'s Comedy Creation',
    slug: 'weekly-comedy-creation-nafisnin',
    description: 'By nafisnin',
    imageUrl: '/Artists/Weekly Features/Memes/nafisnin.webp',
    artist: getArtistByFilename('nafisnin'),
    medium: mockMediums[0],
    style: mockStyles[5],
    themes: [mockThemes[5], mockThemes[3]],
    yearCreated: 2025,
    contentType: 'meme',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-meme9',
    title: 'Travis0n_\'s Hilarious Content',
    slug: 'weekly-hilarious-content-travis0n',
    description: 'By travis0n_',
    imageUrl: '/Artists/Weekly Features/Memes/travis0n_.webp',
    artist: getArtistByFilename('travis0n_'),
    medium: mockMediums[0],
    style: mockStyles[5],
    themes: [mockThemes[5], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'meme',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
];

// Mock gifs (main gallery - original content only)
export const mockGifs: Artwork[] = [
  {
    _id: 'gif1',
    title: 'Animated Expression',
    slug: 'animated-expression',
    description: 'By AlexGoldPack',
    imageUrl: '/Artists/Gifs/AlexGoldPack.gif',
    artist: getArtistByFilename('AlexGoldPack.gif'),
    medium: mockMediums[0],
    style: mockStyles[3],
    themes: [mockThemes[3], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'gif',
    status: 'approved',
    submissionDate: '2025-03-20',
    publicationDate: '2025-03-22',
    isFeatured: true,
    createdAt: '2025-03-20',
    updatedAt: '2025-03-22',
  },
  {
    _id: 'gif2',
    title: 'Dynamic Animation',
    slug: 'dynamic-animation',
    description: 'By Bikoy',
    imageUrl: '/Artists/Gifs/Bikoy.mp4',
    artist: getArtistByFilename('Bikoy.mp4'),
    medium: mockMediums[0],
    style: mockStyles[2],
    themes: [mockThemes[3], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'gif',
    status: 'approved',
    submissionDate: '2025-03-19',
    publicationDate: '2025-03-21',
    isFeatured: false,
    createdAt: '2025-03-19',
    updatedAt: '2025-03-21',
  },
  // Weekly Featured Gifs (with flag for preservation when features rotate)
  {
    _id: 'weekly-gif1',
    title: 'Luis\'s Animated Masterpiece',
    slug: 'weekly-animated-masterpiece-luis',
    description: 'By luis',
    imageUrl: '/Artists/Weekly Features/Gifs/luis.gif',
    artist: getArtistByFilename('luis'),
    medium: mockMediums[0],
    style: mockStyles[1],
    themes: [mockThemes[0], mockThemes[3]],
    yearCreated: 2025,
    contentType: 'gif',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-gif1',
    title: 'Feriset\'s Animated Masterpiece',
    slug: 'weekly-animated-masterpiece-feriset',
    description: 'By feriset',
    imageUrl: '/Artists/Weekly Features/Gifs/feriset.gif',
    artist: getArtistByFilename('feriset'),
    medium: mockMediums[0],
    style: mockStyles[3],
    themes: [mockThemes[3], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'gif',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-gif2',
    title: 'Rexleys\'s Dynamic Video',
    slug: 'weekly-dynamic-video-rexleys',
    description: 'By rexleys',
    imageUrl: '/Artists/Weekly Features/Gifs/rexleys.mp4',
    artist: getArtistByFilename('rexleys'),
    medium: mockMediums[0],
    style: mockStyles[3],
    themes: [mockThemes[3], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'gif',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    isWeeklyFeatured: true,
    weeklyFeatureDate: '2025-09-28',
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
];

// WEEKLY FEATURES - SEPARATE ARRAYS (only actual weekly features content)
export const weeklyFeaturedArtworks: Artwork[] = [
  {
    _id: 'weekly-art1',
    title: 'Ceqih\'s Creative Vision',
    slug: 'weekly-creative-vision-ceqih',
    description: 'By ceqih',
    imageUrl: '/Artists/Weekly Features/Arts/ceqih.jpg',
    artist: getArtistByFilename('ceqih'),
    medium: mockMediums[1],
    style: mockStyles[0],
    themes: [mockThemes[0], mockThemes[2]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-art2',
    title: 'Ciao\'s Digital Masterpiece',
    slug: 'weekly-digital-masterpiece-ciao0910',
    description: 'By ciao0910',
    imageUrl: '/Artists/Weekly Features/Arts/ciao0910.webp',
    artist: getArtistByFilename('ciao0910'),
    medium: mockMediums[0],
    style: mockStyles[1],
    themes: [mockThemes[1], mockThemes[3]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-art3',
    title: 'Dark Thinking',
    slug: 'weekly-dark-thinking-darkthgink',
    description: 'By darkthgink',
    imageUrl: '/Artists/Weekly Features/Arts/darkthgink.webp',
    artist: getArtistByFilename('darkthgink'),
    medium: mockMediums[0],
    style: mockStyles[2],
    themes: [mockThemes[2], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-art4',
    title: 'DLDW Artistic Expression',
    slug: 'weekly-artistic-expression-dldw1314',
    description: 'By dldw1314',
    imageUrl: '/Artists/Weekly Features/Arts/dldw1314.webp',
    artist: getArtistByFilename('dldw1314'),
    medium: mockMediums[0],
    style: mockStyles[3],
    themes: [mockThemes[0], mockThemes[3]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-art5',
    title: 'HRX Vision',
    slug: 'weekly-hrx-vision-hrx0005',
    description: 'By hrx0005',
    imageUrl: '/Artists/Weekly Features/Arts/hrx0005.webp',
    artist: getArtistByFilename('hrx0005'),
    medium: mockMediums[0],
    style: mockStyles[4],
    themes: [mockThemes[1], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-art6',
    title: 'JDR Creative Design',
    slug: 'weekly-creative-design-jdr525',
    description: 'By jdr525',
    imageUrl: '/Artists/Weekly Features/Arts/jdr525.webp',
    artist: getArtistByFilename('jdr525'),
    medium: mockMediums[0],
    style: mockStyles[0],
    themes: [mockThemes[2], mockThemes[5]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-art7',
    title: 'Lueguo Motion Art',
    slug: 'weekly-motion-art-lueguo-video',
    description: 'By lueguo',
    imageUrl: '/Artists/Weekly Features/Arts/lueguo.mp4',
    artist: getArtistByFilename('lueguo'),
    medium: mockMediums[0],
    style: mockStyles[1],
    themes: [mockThemes[0], mockThemes[3]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-art8',
    title: 'Lueguo Static Art',
    slug: 'weekly-static-art-lueguo-image',
    description: 'By lueguo',
    imageUrl: '/Artists/Weekly Features/Arts/lueguo.webp',
    artist: getArtistByFilename('lueguo'),
    medium: mockMediums[0],
    style: mockStyles[2],
    themes: [mockThemes[1], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-art9',
    title: 'May Motion Creation',
    slug: 'weekly-motion-creation-may821',
    description: 'By may821',
    imageUrl: '/Artists/Weekly Features/Arts/may821.mp4',
    artist: getArtistByFilename('may821'),
    medium: mockMediums[0],
    style: mockStyles[3],
    themes: [mockThemes[2], mockThemes[5]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-art10',
    title: 'Nova\'s Artistic Vision',
    slug: 'weekly-artistic-vision-novanguyen2802',
    description: 'By novanguyen2802',
    imageUrl: '/Artists/Weekly Features/Arts/novanguyen2802.webp',
    artist: getArtistByFilename('novanguyen2802'),
    medium: mockMediums[0],
    style: mockStyles[4],
    themes: [mockThemes[0], mockThemes[2]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-art11',
    title: 'Tinky Viki Creation',
    slug: 'weekly-viki-creation-tinkyviki',
    description: 'By tinkyviki',
    imageUrl: '/Artists/Weekly Features/Arts/tinkyviki.webp',
    artist: getArtistByFilename('tinkyviki'),
    medium: mockMediums[0],
    style: mockStyles[0],
    themes: [mockThemes[1], mockThemes[3]],
    yearCreated: 2025,
    contentType: 'artwork',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
];

export const weeklyFeaturedMemes: Artwork[] = [
  {
    _id: 'weekly-meme1',
    title: 'Dani\'s Humor',
    slug: 'weekly-humor-daniviecmi',
    description: 'By daniviecmi',
    imageUrl: '/Artists/Weekly Features/Memes/daniviecmi.webp',
    artist: getArtistByFilename('daniviecmi'),
    medium: mockMediums[0],
    style: mockStyles[5],
    themes: [mockThemes[3], mockThemes[5]],
    yearCreated: 2025,
    contentType: 'meme',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-meme2',
    title: 'Dorock\'s Comedy',
    slug: 'weekly-comedy-dorock34',
    description: 'By dorock34',
    imageUrl: '/Artists/Weekly Features/Memes/dorock34.mp4',
    artist: getArtistByFilename('dorock34'),
    medium: mockMediums[0],
    style: mockStyles[5],
    themes: [mockThemes[2], mockThemes[5]],
    yearCreated: 2025,
    contentType: 'meme',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-meme3',
    title: 'Hyuga\'s Meme Magic',
    slug: 'weekly-meme-magic-hyuga37512',
    description: 'By hyuga37512',
    imageUrl: '/Artists/Weekly Features/Memes/hyuga37512.webp',
    artist: getArtistByFilename('hyuga37512'),
    medium: mockMediums[0],
    style: mockStyles[5],
    themes: [mockThemes[3], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'meme',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-meme4',
    title: 'Karan\'s Dedhaa',
    slug: 'weekly-dedhaa-karandedhaa',
    description: 'By karandedhaa',
    imageUrl: '/Artists/Weekly Features/Memes/karandedhaa.webp',
    artist: getArtistByFilename('karandedhaa'),
    medium: mockMediums[0],
    style: mockStyles[5],
    themes: [mockThemes[2], mockThemes[3]],
    yearCreated: 2025,
    contentType: 'meme',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-meme5',
    title: 'Mofeoluwa\'s Comedy',
    slug: 'weekly-comedy-mofeoluwa2',
    description: 'By mofeoluwa2',
    imageUrl: '/Artists/Weekly Features/Memes/mofeoluwa2.webp',
    artist: getArtistByFilename('mofeoluwa2'),
    medium: mockMediums[0],
    style: mockStyles[5],
    themes: [mockThemes[1], mockThemes[5]],
    yearCreated: 2025,
    contentType: 'meme',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-meme6',
    title: 'Nafis\'s Humor',
    slug: 'weekly-humor-nafisnin',
    description: 'By nafisnin',
    imageUrl: '/Artists/Weekly Features/Memes/nafisnin.webp',
    artist: getArtistByFilename('nafisnin'),
    medium: mockMediums[0],
    style: mockStyles[5],
    themes: [mockThemes[3], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'meme',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-meme7',
    title: 'Travis\'s Meme',
    slug: 'weekly-meme-travis0n',
    description: 'By travis0n_',
    imageUrl: '/Artists/Weekly Features/Memes/travis0n_.webp',
    artist: getArtistByFilename('travis0n_'),
    medium: mockMediums[0],
    style: mockStyles[5],
    themes: [mockThemes[2], mockThemes[5]],
    yearCreated: 2025,
    contentType: 'meme',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
];

export const weeklyFeaturedGifs: Artwork[] = [
  {
    _id: 'weekly-gif1',
    title: 'Feriset\'s Animation',
    slug: 'weekly-animation-feriset',
    description: 'By feriset',
    imageUrl: '/Artists/Weekly Features/Gifs/feriset.gif',
    artist: getArtistByFilename('feriset'),
    medium: mockMediums[0],
    style: mockStyles[4],
    themes: [mockThemes[0], mockThemes[2]],
    yearCreated: 2025,
    contentType: 'gif',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
  {
    _id: 'weekly-gif2',
    title: 'Rexley\'s Motion',
    slug: 'weekly-motion-rexleys',
    description: 'By rexleys',
    imageUrl: '/Artists/Weekly Features/Gifs/rexleys.mp4',
    artist: getArtistByFilename('rexleys'),
    medium: mockMediums[0],
    style: mockStyles[3],
    themes: [mockThemes[1], mockThemes[4]],
    yearCreated: 2025,
    contentType: 'gif',
    status: 'approved',
    submissionDate: '2025-09-25',
    publicationDate: '2025-09-28',
    isFeatured: true,
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
];

// API Functions for main galleries
export function getMockArtworks(page: number = 1, limit: number = 12) {
  const startIndex = (page - 1) * limit;
  const endIndex = startIndex + limit;
  const paginatedArtworks = mockArtworks.slice(startIndex, endIndex);
  
  return {
    artworks: paginatedArtworks,
    total: mockArtworks.length,
    page,
    limit,
    hasMore: endIndex < mockArtworks.length,
  };
}

export function getMockArtworkBySlug(slug: string): Artwork | null {
  // Search in regular artworks first
  const artwork = mockArtworks.find(artwork => artwork.slug === slug);
  if (artwork) return artwork;
  
  // Search in weekly featured artworks
  const weeklyArtwork = weeklyFeaturedArtworks.find(artwork => artwork.slug === slug);
  if (weeklyArtwork) return weeklyArtwork;
  
  // Search in weekly featured memes
  const weeklyMeme = weeklyFeaturedMemes.find(artwork => artwork.slug === slug);
  if (weeklyMeme) return weeklyMeme;
  
  // Search in weekly featured gifs
  const weeklyGif = weeklyFeaturedGifs.find(artwork => artwork.slug === slug);
  if (weeklyGif) return weeklyGif;
  
  return null;
}

export function getMockMemes(page: number = 1, limit: number = 12) {
  const startIndex = (page - 1) * limit;
  const endIndex = startIndex + limit;
  const paginatedMemes = mockMemes.slice(startIndex, endIndex);
  
  return {
    artworks: paginatedMemes,
    total: mockMemes.length,
    page,
    limit,
    hasMore: endIndex < mockMemes.length,
  };
}

export function getMockMemeBySlug(slug: string): Artwork | null {
  // Search in both regular memes and weekly featured memes
  const allMemes = [...mockMemes, ...weeklyFeaturedMemes];
  return allMemes.find(meme => meme.slug === slug) || null;
}

export function getMockGifs(page: number = 1, limit: number = 12) {
  const startIndex = (page - 1) * limit;
  const endIndex = startIndex + limit;
  const paginatedGifs = mockGifs.slice(startIndex, endIndex);
  
  return {
    artworks: paginatedGifs,
    total: mockGifs.length,
    page,
    limit,
    hasMore: endIndex < mockGifs.length,
  };
}

export function getMockGifBySlug(slug: string): Artwork | null {
  // Search in both regular gifs and weekly featured gifs
  const allGifs = [...mockGifs, ...weeklyFeaturedGifs];
  return allGifs.find(gif => gif.slug === slug) || null;
}

// API Functions for weekly features (separate from main galleries)
export function getMockWeeklyFeaturedArtworks(): Artwork[] {
  return mockArtworks.filter(artwork => artwork.isWeeklyFeatured);
}

export function getMockWeeklyFeaturedMemes(): Artwork[] {
  return mockMemes.filter(meme => meme.isWeeklyFeatured);
}

export function getMockWeeklyFeaturedGifs(): Artwork[] {
  return mockGifs.filter(gif => gif.isWeeklyFeatured);
}

export function getAllWeeklyFeatured(): Artwork[] {
  return [...weeklyFeaturedArtworks, ...weeklyFeaturedMemes, ...weeklyFeaturedGifs];
}

// Mock User for weekly features
const mockCurator: User = {
  _id: 'admin1',
  username: 'curator',
  email: 'curator@riallery.com',
  role: 'curator',
  isActive: true,
  createdAt: '2024-01-01',
  updatedAt: '2024-03-01',
};

// Mock Weekly Features
export const mockWeeklyFeatures: WeeklyFeature[] = [
  {
    _id: '1',
    title: 'Artist Spotlight: Digital Innovators',
    slug: 'digital-innovators-spotlight',
    artist: mockArtists[0], // arishdona
    featuredArtworks: [mockArtworks[0]], // Digital Serenity
    introduction: 'This week, we\'re thrilled to spotlight innovative digital artists from our community. These creators push the boundaries of digital art, blending traditional techniques with cutting-edge technology to create stunning visual experiences.',
    artistNoteQuote: 'Digital art allows us to explore realms that traditional media cannot reach. It\'s about expanding the canvas of human imagination.',
    scheduledDate: '2025-09-28',
    publicationStatus: 'published',
    publishedAt: '2025-09-28',
    createdBy: mockCurator,
    updatedBy: mockCurator,
    createdAt: '2025-09-25',
    updatedAt: '2025-09-28',
  },
];

// API Functions for weekly features
export function getMockCurrentFeature(): WeeklyFeature | null {
  return mockWeeklyFeatures.find(feature => feature.publicationStatus === 'published') || null;
}

export function getMockWeeklyFeatureBySlug(slug: string): WeeklyFeature | null {
  return mockWeeklyFeatures.find(feature => feature.slug === slug) || null;
}

// Navigation function to get previous/next artwork in collection
export function getArtworkNavigation(currentSlug: string, contentType?: string) {
  let collection: Artwork[] = [];
  let baseUrl = '/gallery';
  
  // Determine which collection to use based on content type or by finding the artwork
  if (contentType === 'meme') {
    collection = [...mockMemes, ...weeklyFeaturedMemes];
    baseUrl = '/memes';
  } else if (contentType === 'gif') {
    collection = [...mockGifs, ...weeklyFeaturedGifs];
    baseUrl = '/gifs';
  } else {
    // For artworks, search in all collections to find where the current artwork is
    const artworkInMain = mockArtworks.find(art => art.slug === currentSlug);
    const artworkInWeeklyArt = weeklyFeaturedArtworks.find(art => art.slug === currentSlug);
    const artworkInWeeklyMemes = weeklyFeaturedMemes.find(art => art.slug === currentSlug);
    const artworkInWeeklyGifs = weeklyFeaturedGifs.find(art => art.slug === currentSlug);
    
    if (artworkInMain) {
      collection = mockArtworks;
      baseUrl = '/gallery';
    } else if (artworkInWeeklyArt) {
      collection = weeklyFeaturedArtworks;
      baseUrl = '/gallery';
    } else if (artworkInWeeklyMemes) {
      collection = weeklyFeaturedMemes;
      baseUrl = '/memes';
    } else if (artworkInWeeklyGifs) {
      collection = weeklyFeaturedGifs;
      baseUrl = '/gifs';
    } else {
      // Fallback to main artworks
      collection = mockArtworks;
      baseUrl = '/gallery';
    }
  }
  
  const currentIndex = collection.findIndex(art => art.slug === currentSlug);
  
  if (currentIndex === -1) {
    return { 
      prev: null, 
      next: null, 
      collection: 'unknown', 
      baseUrl,
      currentIndex: 1,
      total: collection.length
    };
  }
  
  const prev = currentIndex > 0 ? collection[currentIndex - 1] : null;
  const next = currentIndex < collection.length - 1 ? collection[currentIndex + 1] : null;
  
  // Determine collection name for display
  let collectionName = 'Gallery';
  if (baseUrl === '/memes') collectionName = 'Memes';
  if (baseUrl === '/gifs') collectionName = 'GIFs';
  
  return {
    prev,
    next,
    collection: collectionName,
    baseUrl,
    currentIndex: currentIndex + 1,
    total: collection.length
  };
}